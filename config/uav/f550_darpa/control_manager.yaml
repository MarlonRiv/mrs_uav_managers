# - list of names of dynamically loaded trackers
# - trackers follow the mrs_uav_manager/Tracker.h interface
trackers : [
  "mrs_trackers/LandoffTracker",
  "mrs_trackers/MpcTracker",
  "mrs_trackers/LineTracker",
]

# - list of names of dynamically loaded controllers
# - controllers follow the mrs_uav_manager/Controller.h interface
controllers : [
  "mrs_controllers/MpcController",
  "mrs_controllers/So3Controller",
  "mrs_controllers/FailsafeController",
  "mrs_controllers/AttitudeController",
  "mrs_controllers/MpcController",
]

# - this is the "do nothing tracker", which is active when no other is
# - NullTracker is defined in the mrs_uav_manager package
null_tracker: "mrs_uav_manager/NullTracker"

status_timer_rate:  10 # [Hz]

safety:

  safety_timer_rate: 100 # [Hz]
  failsafe_timer_rate: 100 # [Hz]
  escalating_failsafe_timeout: 1.0 # [s]

  tilt_limit_eland: 60 # [deg]
  tilt_limit_disarm: 90 # [deg]

  # control error thresholds for triggering the emergancy land
  eland:
    so3: 1.5 # [m]
    mpc: 3.0 # [m]
    other: 1.5 # [m] # applies to anything else than so3 and mpc

  # control error thresholds for triggering the failsafe land
  failsafe:
    so3: 2.5 # [m]
    mpc: 3.0 # [m]
    other: 2.5 # [m] # applies to anything else than so3 and mpc

  # tracker used for emergancy hover routine
  ehover_tracker: "mrs_trackers/LandoffTracker"

  # controller used for safety landing (feed forward)
  failsafe_controller: "mrs_controllers/FailsafeController"

  # controller used for emergancy (controller) landing
  eland_controller: "mrs_controllers/So3Controller"

  # after not receiving odometry for more than this, the failsafe landing will trigger
  odometry_max_missing_time: 0.1 # [s]

  elanding_timer_rate: 10
  elanding_cutoff_height:  1.0
  elanding_cutoff_mass_factor:  0.5 # how much lighter does the drone appear to be?

  tilt_error_failsafe:

    enabled: true
    tilt_error_threshold: 30 # [deg]
    min_height: 0.5 # [m]

  rc_eland:

    enabled: true
    channel_number: 7 # [-]
    threshold: 1500 # [us]

obstacle_bumper:

  enabled: true
  timer_rate: 20 # [Hz]

  horizontal_distance: 0.9 # [m]
  vertical_distance: 0.3 # [m]

  obstacle_hugging:

    enabled: true

  # true: the drone will move away from obstacles that appear within the radius
  repulsion:

    enabled: false

    horizontal_distance: 0.8 # [m]
    horizontal_offset: 0.3 # [m] by how much to repulse from the horizontal_distance limit

    vertical_distance: 0.5 # [m]
    vertical_offset: 0.1 # [m]

joystick:
  joystick_timer_rate: 30 # [Hz]

rc_joystick:

  enabled: false
  channel_number: 6 # indexed from 0

  # switch the chanel repeatedly to enable the joystic control
  # n_switches need to occur within a time timeout
  timeout: 2.0 # [s]
  n_switches: 5 # [-]
