<launch>

  <!-- args corresponding to environment variables -->
  <arg name="UAV_NAME" default="$(env UAV_NAME)" />
  <arg name="PROFILER" default="$(optenv PROFILER false)" />
  <arg name="WORLD_FILE" default="$(optenv WORLD_FILE)" />
  <arg name="WORLD_NAME" default="$(optenv WORLD_NAME)" />
  <arg name="RUN_TYPE" default="$(optenv RUN_TYPE)" />

  <arg if="$(eval arg('RUN_TYPE') == 'simulation')" name="simulation" value="true" />
  <arg unless="$(eval arg('RUN_TYPE') == 'simulation')" name="simulation" value="false" />

  <arg if="$(eval arg('WORLD_FILE') == '' and arg('WORLD_NAME') != '')" name="world_file" value="$(find mrs_uav_general)/config/worlds/world_$(env WORLD_NAME).yaml" />
  <arg if="$(eval arg('WORLD_FILE') == '' and arg('WORLD_NAME') == '' and arg('simulation'))" name="world_file" value="$(find mrs_uav_general)/config/worlds/world_simulation.yaml" />
  <arg if="$(eval arg('WORLD_FILE') != '')" name="world_file" value="$(arg WORLD_FILE)" />

  <arg name="custom_config" default="" />

    <!-- other args -->
  <arg name="standalone" default="true" />
  <arg name="debug" default="false" />

  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="standalone" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="load" />
  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="$(arg UAV_NAME)_nodelet_manager" />

  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />

  <group ns="$(arg UAV_NAME)">

<!--//{ estimation_manager -->
    <node pkg="nodelet" type="nodelet" name="estimation_manager" args="$(arg nodelet) mrs_uav_managers/EstimationManager $(arg nodelet_manager)" output="screen" launch-prefix="$(arg launch_prefix)">

      <param name="enable_profiler" value="$(arg PROFILER)" />
      <param name="uav_name" value="$(arg UAV_NAME)" />

      <rosparam file="$(arg world_file)" command="load" />
      <rosparam file="$(find mrs_uav_managers)/config/default/estimation_manager/estimation_manager.yaml" command="load" />
      <rosparam file="$(find mrs_uav_managers)/config/default/estimators.yaml" command="load" />

      <!-- Load a user param file -->
      <rosparam if="$(eval not arg('custom_config') == '')" file="$(arg custom_config)" />

<!--//{ Subscribers-->
      <!-- common -->
      <remap from="~control_input_in" to="control_manager/odometry_input" />
      <remap from="~hw_api_capabilities_in" to="hw_api/capabilities" />

<!--//}-->

<!--//{ Publishers -->
      <remap from="~profiler" to="profiler" />
      <remap from="~odom_main_out" to="~odom_main" />
      <remap from="~innovation_out" to="~innovation" />
      <remap from="~uav_state_out" to="~uav_state" />
      <remap from="~diagnostics_out" to="~diagnostics" />
      <remap from="~max_flight_altitude_agl_out" to="~max_flight_altitude_agl" />
      <remap from="~height_agl_out" to="~height_agl" />

<!--//{ FIXME: delete after merge with new uav system -->
      <remap from="~diagnostics_legacy_out" to="~diagnostics_legacy" />
<!--//}-->
<!--//}-->

<!--//{ Service servers -->
      <remap from="~change_estimator_in" to="~change_estimator" />
      <remap from="~toggle_service_callbacks_in" to="~toggle_service_callbacks" />
<!--//}-->

    </node>
<!--//}-->

  </group>

</launch>
